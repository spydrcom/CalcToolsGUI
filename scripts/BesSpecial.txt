

//* special case Bessel algorithms


// general test for J, K, I, Y functions with common value for n
request n ; dx = 0.0001


// library objects for derivative approximations and Bessel functions
LIBRARY dydx net.myorb.math.expressions.algorithms.ClMathDerivative
LIBRARY Bessel net.myorb.math.expressions.algorithms.ClMathBessel


// Ka special case
configure Bessel form "integral" kind "K" method "CTA" alpha "n" delta "0.001" terms "20" precision "1E-4" description "Bessel function K (n)" ; instance Kn Bessel
GRAPH LIM 5 [0.2 < x < 5 <> 0.1] ( Kn x ) ; ENTITLED Ka plot computed based on in-line configuration

!! K_n(x) = Kn (x) ; // run DE test on Kn function
configure dydx symbol "d" order "2" function "K_n" variable "x" run "dx" description "d2K/dx2" ; instance dKdx2 dydx
configure dydx symbol "d" order "1" function "K_n" variable "x" run "dx" description "dK/dx" ; instance dKdx1 dydx

!! KnDE(x) = x^2 * dKdx2() + x * dKdx1() - (x^2 + n^2) * K_n(x) ; // definition of differential equation as a function
GRAPH LIM 0.2 [0.2 < x < 5 <> 0.1] ( KnDE x ) ; ENTITLED Differential Equation error plot for Kn computed based on in-line configuration 
RENDERF KnDE


// Yn special case
configure Bessel form "digamma" kind "Y" method "polynomial" alpha "n" terms "40" description "Bessel function Y (n)" ; instance Yn Bessel
GRAPH LIM 5 [1 < x < 20 <> 0.1] ( Yn x ) ; ENTITLED Yn plot computed based on in-line configuration

!! Y_n(x) = Yn (x) ; // run DE test on Yn function
configure dydx symbol "d" order "1" function "Y_n" variable "x" run "dx" description "dY/dx" ; instance dYdx1 dydx
configure dydx symbol "d" order "2" function "Y_n" variable "x" run "dx" description "d2Y/dx2" ; instance dYdx2 dydx

!! YnDE(x) = x^2 * dYdx2() + x * dYdx1() + (x^2 - n^2) * Y_n(x) ; // definition of differential equation as a function
GRAPH LIM 5 [1 < x < 20 <> 0.1] ( YnDE x ) ; ENTITLED Differential Equation error plot for Yn computed based on in-line configuration 
RENDERF YnDE


// In special case
configure Bessel form "integral" kind "I" method "CTA" alpha "n" delta "0.001" terms "40" precision "1E-4" description "Bessel function I (n)" ; instance In Bessel
GRAPH LIM 5 [0 < x < 20 <> 0.1] ( In x ) ; ENTITLED In plot computed based on in-line configuration

!! I_n(x) = In (x)
configure dydx symbol "d" order "1" function "I_n" variable "x" run "dx" description "dI/dx" ; instance dIdx1 dydx
configure dydx symbol "d" order "2" function "I_n" variable "x" run "dx" description "d2I/dx2" ; instance dIdx2 dydx

!! InDE(x) = x^2 * dIdx2() + x * dIdx1() - (x^2 + n^2) * I_n(x) ; // definition of differential equation as a function
GRAPH LIM 0.5 [0 < x < 20 <> 0.1] ( InDE x ) ; ENTITLED Differential Equation error plot for In computed based on in-line configuration 
RENDERF InDE


// Jn special case
configure Bessel form "integral" kind "J" method "CCQ" delta "0.001" alpha "n" terms "10" precision "1E-10" description "Bessel function J (n)" ; instance Jn Bessel
GRAPH LIM 5 [0 < x < 20 <> 0.1] ( Jn x ) ; ENTITLED Jn plot computed based on in-line configuration

!! J_n(x) = Jn (x)
configure dydx symbol "d" order "1" function "J_n" variable "x" run "dx" description "dJ/dx" ; instance dJdx1 dydx
configure dydx symbol "d" order "2" function "J_n" variable "x" run "dx" description "d2J/dx2" ; instance dJdx2 dydx

!! JnDE(x) = x^2 * dJdx2() + x * dJdx1() + (x^2 - n^2) * J_n(x) ; // definition of differential equation as a function
GRAPH LIM 5 [0 < x < 20 <> 0.1] ( JnDE x ) ; ENTITLED Differential Equation error plot for Jn computed based on in-line configuration 
RENDERF JnDE

