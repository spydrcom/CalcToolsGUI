

//* Lerch transcendent tests


INFINITY = 500

RENDER "Identities of the Lerch transcendent PHI function" CENTER red

!! PHI (z,s,alpha) = 1/GAMMA (s) * INTEGRAL [0 <= t <= INFINITY] ( t^(s-1) / ( exp(alpha*t) * (1 - z*exp(-t)) ) * <*> t ) ; RENDERF PHI
RENDER "The PHI function as an integral" TOP 

!! PHI (z,s,a) = SIGMA [0 <= k <= INFINITY] (z^k/(k+a)^s) ; RENDERF PHI
RENDER "The PHI function as an infinite series" TOP 

!! zeta (lambda,s,a) = PHI ( exp (2*i*pi*lambda), s, alpha)  ; RENDERF zeta
RENDER "The Lerch zeta function" TOP 

!! zeta (s,alpha) = PHI (1,s,alpha) ; RENDERF zeta
RENDER "The Hurwitz zeta function" TOP 

!! zeta (s) = PHI (1,s,1) ; RENDERF zeta
RENDER "The Riemann zeta function" TOP 

!! PSI (n,alpha) = (-1)^(n+1) * PHI (1,n+1,alpha) * n! ; RENDERF PSI
RENDER "The Polygamma function" TOP 

!! chi(s,z) = 2^(-s) * PHI (z^2,s,1/2) * z ; RENDERF chi
RENDER "The Legendre chi function" TOP 

!! beta(s) = 2^(-s) * PHI (-1,s,1/2) ; RENDERF beta
RENDER "The Dirichlet beta function" TOP 

!! Li(s,z) = z * PHI (z,s,1) ; RENDERF Li
RENDER "The polylogarithm Li function" TOP 

!! eta(s) = PHI (-1,s,1) ; RENDERF eta
RENDER "The Dirichlet eta function" TOP 


// simple RI plot
!! Ltest (s) = Li (2, 0.5+i*s)
plotri  Ltest  [ -0.9 < x < 0.9 <> 0.01 ] 



// examine the shape of integrand functions
LIBRARY LT  net.myorb.math.specialfunctions.Lerch

!+ PHIINT (z,s,a,t) = LT.integrand (z,s,a,t)
!! phitest(z,s,a,t) = PHIINT (z,s,a,t)

// verify call works
calc phitest ( 0.5, 2, 1, 2 )

// plot showing integrand shape - real version
graph [ 0 < x < 10 <> 0.01 ] ( phitest ( -0.1, 2, 1, x ))

// plot showing integrand shape - complex version
!! phicomplex (t) = phitest ( -0.1-!*2, 2, 1, t )
plotri  phicomplex  [ 0 < x < 10 <> 0.01 ] 

